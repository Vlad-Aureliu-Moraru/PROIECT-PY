### Analiză și Explicație a Laboratorului 10 - Calcul Numeric

Laboratorul 10 se concentrează pe trei metode principale de aproximare și interpolare a funcțiilor: **polinoame Bernstein**, **polinoame Lagrange** și **funcții spline cubice**. Aceste metode sunt esențiale în calculul numeric, având aplicații în domenii precum modelarea matematică, grafica pe calculator și prelucrarea datelor.

---

#### **1. Polinoame Bernstein**
- **Definiție**: Polinoamele Bernstein sunt utilizate pentru aproximarea uniformă a funcțiilor continue pe un interval. Pentru o funcție \( f : [0, 1] \rightarrow \mathbb{R} \), polinomul Bernstein de ordin \( n \) este definit ca:
  \[
  B_n(f; x) = \sum_{k=0}^{n} f\left(\frac{k}{n}\right) C_n^k x^k (1-x)^{n-k}.
  \]
- **Proprietăți**:
  - Convergență uniformă la \( f \) pe \([0, 1]\) (Teorema 1).
  - Păstrează forma funcției (convexitate/concavitate).
  - Convergență lentă și lipsa evaluării a priori a erorii.
- **Extindere**: Teorema 2 generalizează rezultatul pentru intervale arbitrare \([a, b]\) prin transformarea \( x \mapsto \frac{x-a}{b-a} \).

**Exerciții propuse**:
1. Implementarea unei funcții pentru construirea polinoamelor Bernstein.
2. Vizualizarea aproximării pentru diferite grade ale polinomului (\( n = 5, 10, 15 \)).
3. Crearea unei animații pentru a ilustra convergența polinoamelor Bernstein.

---

#### **2. Interpolare cu Polinoame Lagrange**
- **Definiție**: Polinoamele Lagrange interpolează o funcție \( f \) în puncte distincte \( x_1, \dots, x_n \). Polinomul de grad \( n-1 \) este:
  \[
  L(x) = \sum_{j=1}^{n} y_j l_{j,n}(x), \quad \text{unde} \quad l_{j,n}(x) = \prod_{\substack{i=1 \\ i \neq j}}^{n} \frac{x - x_i}{x_j - x_i}.
  \]
- **Proprietăți**:
  - Unicitatea polinomului de interpolare.
  - Eroarea de aproximare depinde de derivata de ordinul \( n \) a funcției.
  - Posibilitatea oscilațiilor mari (fenomenul Runge) pentru noduri echidistante.

**Exerciții propuse**:
1. Implementarea polinomului Lagrange.
2. Compararea cu funcția built-in `scipy.interpolate.lagrange`.
3. Generarea unei animații pentru a vizualiza proprietățile de aproximare.

---

#### **3. Funcții Spline Cubice**
- **Definiție**: Funcțiile spline cubice sunt funcții polinomiale pe bucăți de gradul 3, care interpolează datele și au derivate continue până la ordinul 2 în noduri.
  - **Tipuri**:
    - **Libere**: \( g''(a) = g''(b) = 0 \) (condiții naturale).
    - **Fixate**: \( g'(a) = f'(a) \), \( g'(b) = f'(b) \).
- **Proprietăți**:
  - Existență și unicitate (Teorema 8).
  - Netezime și flexibilitate în modelarea datelor.

**Exerciții propuse**:
1. Utilizarea funcțiilor `interp1d` și `CubicSpline` pentru interpolare.
2. Compararea rezultatelor pentru diferite tipuri de interpolare (nearest, liniară, cubică).
3. Aplicarea interpolării 2D pe funcția \( z = \sin(x^2 + y^2) \).

---

#### **Concluzie**
Laboratorul acoperă metode esențiale de aproximare și interpolare, fiecare cu avantaje și limite specifice:
- **Polinoame Bernstein**: Aproximare globală, utilă pentru păstrarea formei funcției.
- **Polinoame Lagrange**: Interpolare exactă în noduri, dar cu riscul oscilațiilor.
- **Spline-uri Cubice**: Flexibilitate și netezime, ideală pentru date cu variații locale.

**Aplicații practice**:
- Modelarea temperaturii în funcție de oră.
- Generarea de animații pentru vizualizarea convergenței.
- Interpolarea 2D pentru funcții de două variabile.

Pentru studiu suplimentar, se recomandă documentația oficială a bibliotecii `scipy.interpolate` și cartea *Numerical Analysis* de Burden și Faires.
